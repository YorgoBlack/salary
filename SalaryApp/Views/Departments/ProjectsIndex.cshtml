@using SalaryApp.Models
@model SalaryApp.Models.ProjectsSearchModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "Проекты";
}

<style>
    .GridViewScrollHeader TH, .GridViewScrollHeader TD {
        padding: 10px;
        font-weight: normal;
        white-space: nowrap;
        border-right: 1px solid #e6e6e6;
        border-bottom: 1px solid #e6e6e6;
        background-color: #F4F4F4;
        color: #999999;
        text-align: left;
        vertical-align: bottom;
    }

    .GridViewScrollItem TD {
        padding: 10px;
        width: 50px;
        white-space: nowrap;
        border-right: 1px solid #e6e6e6;
        border-bottom: 1px solid #e6e6e6;
        background-color: #FFFFFF;
        color: #444444;
    }

    .GridViewScrollItemFreeze TD {
        padding: 10px;
        white-space: nowrap;
        border-right: 1px solid #e6e6e6;
        border-bottom: 1px solid #e6e6e6;
        background-color: #FAFAFA;
        color: #444444;
    }

    .GridViewScrollFooterFreeze TD {
        padding: 10px;
        white-space: nowrap;
        border-right: 1px solid #e6e6e6;
        border-top: 1px solid #e6e6e6;
        border-bottom: 1px solid #e6e6e6;
        background-color: #F4F4F4;
        color: #444444;
    }
</style>


<br />
<table width="60%">
    <tr>
        <td>
            @Html.ActionLink("Направления", "Index")
        </td>
        <td>
            @Html.ActionLink("Проекты", "ProjectsIndex")
        </td>
        <td>
            @Html.ActionLink("Редактирование(объединение) проекта(ов)", "RenameProjectsConfirm", false,new {onclick = "OnClickRenameProjects(); return false;"} )
        </td>
    </tr>
</table>

<h2>Проекты</h2>

@using (Html.BeginForm("ProjectsIndex", "Departments", FormMethod.Get, new { @id = "SubmitForm" }))
{
@Html.AntiForgeryToken()
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@Html.HiddenFor(model => model.ChangeProjectId)
@Html.HiddenFor(model => model.ChangeDepartmentId)

<div class="row">
    <div class="form-horizontal">

        <div class="col-lg-3">
            @Html.TextBoxFor(m => m.ProjectNamePattern, new { @class = "form-control", @placeholder = "Название проекта" })
        </div>

        <div class="col-lg-3">
            @Html.DropDownListFor(m => m.FilterDepartment, new SelectList(ViewBag.Departments, "DepartmentId", "Name"), "Все направления",
                    new { @class = "form-control", @placeholder = "Все направления" })
        </div>

        <div class="col-lg-3">
            @Html.TextBoxFor(m => m.RecordsPerPage, new { @class = "form-control", @placeholder = "Отображать по 20 проектов" })
        </div>

        <div class="col-lg-3">
            <button type="submit" class="btn btn-success">
                <span class="glyphicon glyphicon-search"></span>
            </button>
        </div>
    </div>
</div>
<br />
}
@using (Html.BeginForm("ProjectsIndex", "Departments", FormMethod.Get, new { @id = "SubmitFormTable" }))
{

    if (Model.SearchResults != null && Model.SearchResults.Count > 0)
    {
<table style="width:100%" table cellspacing="0">
    <tr class="GridViewScrollHeader">
        <th></th>
        <th align="center">
            Проект
        </th>
        <th>
            Направление
        </th>
        <th>
            Статус
        </th>
    </tr>
    @{int i=0;}
    @foreach (var item in Model.SearchResults)
    {
    <tr>
        <td align="center">
            @Html.CheckBoxFor(Model=>Model.Checked[i])
            <input type="hidden" value="@Model.CheckedIds[i]" name="CheckedIds[@i]" />
        </td>

        <td>
            <div style="margin-left:10px;">
                @Html.DisplayFor(modelItem => item.Name)
            </div>
        </td>

        <td>
            @Html.DropDownListFor(modelItem => item.Department.DepartmentId, new SelectList(ViewBag.Departments, "DepartmentId", "Name"), item.Department.Name, new
                        {
                            onchange = "OnSetDepartment(" + item.ProjectId + ")",
                            @class = "form-control",
                            @id = "ProjectDropDown_" + item.ProjectId
                        })
        </td>
        <td>
            @Html.EnumDisplayNameFor(item.ProjectState)
        </td>
    </tr>
    i++;
}
</table>
}

    using (Html.BeginForm("ProjectsIndex", "Departments", FormMethod.Get))
    {

@Html.PagedListPager(Model.SearchResults, page => Url.Action("ProjectsIndex", Model.getQueryParams(page)), PagedListRenderOptions.PageNumbersOnly)
    }

}
@section Scripts {

    <script type="text/javascript">
        function OnSetDepartment(ObjId) {
            var options = { "backdrop": "static", keyboard: true };
            var e = document.getElementById("ProjectDropDown_" + ObjId);
            document.getElementById("ChangeProjectId").value = ObjId;
            document.getElementById("ChangeDepartmentId").value = e.options[e.selectedIndex].value;
            document.getElementById("SubmitForm").action = "/Departments/ChangeProjectDepartment";
            document.getElementById("SubmitForm").submit();
        }

        function OnClickRenameProjects() {
            var form = document.getElementById("SubmitFormTable");
            form.method = "post";
            form.action = "/Departments/RenameProjectsConfirm";
            form.submit();
        }


    </script>

}