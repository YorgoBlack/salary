@model SalaryApp.Models.UserSalaryTable
@using  SalaryApp.Models

@{
    ViewBag.Title = "Сводная таблиц КБ Овен \"Харьков\"";
}

<style>
    .GridViewScrollHeader TH, .GridViewScrollHeader TD {
        padding: 10px;
        font-weight: normal;
        white-space: nowrap;
        border-right: 1px solid #e6e6e6;
        border-bottom: 1px solid #e6e6e6;
        background-color: #F4F4F4;
        color: #999999;
        text-align: left;
        vertical-align: bottom;
    }

    .GridViewScrollItem TD {
        padding: 10px;
        width: 50px;
        white-space: nowrap;
        border-right: 1px solid #e6e6e6;
        border-bottom: 1px solid #e6e6e6;
        background-color: #FFFFFF;
        color: #444444;
    }

    .GridViewScrollItemFreeze TD {
        padding: 10px;
        white-space: nowrap;
        border-right: 1px solid #e6e6e6;
        border-bottom: 1px solid #e6e6e6;
        background-color: #FAFAFA;
        color: #444444;
    }

    .GridViewScrollFooterFreeze TD {
        padding: 10px;
        white-space: nowrap;
        border-right: 1px solid #e6e6e6;
        border-top: 1px solid #e6e6e6;
        border-bottom: 1px solid #e6e6e6;
        background-color: #F4F4F4;
        color: #444444;
    }
</style>

<br />
<table width="80%">
    <tr>
        <td>
            @if (this.User.IsInRole(SalaryRoles.Administrators) || this.User.IsInRole(SalaryRoles.Directors) || this.User.IsInRole( SalaryRoles.Managers ) )
        {
            @Html.ActionLink("По сотрудникам", "Members")
        }
        </td>
        <td>
            @Html.ActionLink("По проектам", "Projects")
        </td>

        @if (this.User.IsInRole(SalaryRoles.Administrators) || this.User.IsInRole(SalaryRoles.Directors))
        {
        <td>
            @Html.ActionLink("Импорт выплат из файла", "UploadForm", "Departments")
        </td>
        <td>
            @Html.ActionLink("Экспорт выплат и настроек", "Export", "Departments")
        </td>
        <td>
            @Html.ActionLink("Импорт выплат и настроек из файла", "ImportForm", "Departments")
        </td>
        }

    </tr>
</table>

<hr />
<h2>Сводные данные о выплатах сотрудникам</h2>
    
<table table cellspacing="0" id="gvMain" style="width:100%;border-collapse:collapse;">
    <tr  class="GridViewScrollHeader">
        <th> ФИО </th>
        <th> АН </th>
        <th> Проект </th>
        <th> Выплачено </th>
        <th> Остаток </th>
        @foreach (var item in Model.PaymentsGroupsColumns)
        {
            <th> @item.ToString("dd.MM.yyyy") </th>
        }
    </tr>
                
                
    @for (int i = 0; i < Model.Users.Count(); i++)
    {
        if (Model.Users[i].ProjectsBalances.Count() == 0)
        {
            <tr class="GridViewScrollItem">
                <td>@Html.DisplayFor(modelItem => Model.Users[i].ShortName)</td>
                <td>@Html.DisplayFor(modelItem => Model.Users[i].Dept)</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                @for (int j = 0; j < Model.PaymentsGroupsColumns.Count(); j++)
                {
                    <td>&nbsp;</td> 
                }
                @{continue;}
                </tr>
        }
            bool f = true;
            foreach (var item in Model.Users[i].ProjectsBalances)
            {
                <tr  class="GridViewScrollItem">
                <td>
                @if (f)
                {
                    @Html.DisplayFor(modelItem => Model.Users[i].ShortName)
                }
                </td>
                <td>
                @if (f)
                {
                    @Html.DisplayFor(modelItem => Model.Users[i].Dept)
                }
                </td>
                @{f = false;}

                <td>
                    @Html.DisplayFor(modelItem => item.ProjectName)
                </td>
                <td> &nbsp;
                @if( item.PaidsOut.Sum(x=>x.Value) != 0 )
                {
                    @item.PaidsOut.Sum(x => x.Value)
                }
                </td>
                <td> &nbsp;
                @if (item.Balance != 0)
                {
                    @Html.DisplayFor(modelItem => item.Balance)
                }
                </td>
                

                @for (int j = 0; j < Model.PaymentsGroupsColumns.Count(); j++)
                {
                    <td>
                        &nbsp;
                        <font color="Blue">
                        
                        @if (item.PaidsOut.ContainsKey(Model.PaymentsGroupsColumns[j]))
                        {
                            @item.PaidsOut[Model.PaymentsGroupsColumns[j]] 
                            
                        }
                        </font>
                    </td>
                }
                </tr>
            }
        }
        </table>



@section Scripts {
    @Scripts.Render("~/bundles/gridviewscroll")

    <script type="text/javascript">

        var gridViewScroll = null;
        window.onload = function () {
            var options = new GridViewScrollOptions();
            options.elementID = "gvMain";
            options.width = 1500;
            options.height = 600;
            options.freezeColumn = true;
            options.freezeFooter = false;
            options.freezeColumnCssClass = "GridViewScrollItemFreeze";
            options.freezeColumnCount = 5;

            gridViewScroll = new GridViewScroll(options);
            gridViewScroll.enhance();

        }
        function enhance() {
            gridViewScroll.enhance();
        }
        function undo() {
            gridViewScroll.undo();
        }

    </script>

}